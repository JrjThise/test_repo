name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  ThiseMes-Publish-Action:
    runs-on: self-hosted    # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install dependencies
      run: dotnet restore ./test_project
        
    - name: build
      run: dotnet build ./test_project
      
    - name: Test
      run: dotnet test ./test_project
      
    - name: Publish
      run: msbuild /t:publish /p:PublishProfile=ClickOnceProfile.pubxml /p:PublishDir="C:\Thise\TestPublish\"
      #run: msbuild /t:publish /p:PublishProfile=ClickOnceProfile.pubxml -p:PublishDir="\\filserver\Programmer\JRJTEST" -p:IncludeNativeLibrariesForSelfExtract=true ./test_project/test_project
   

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    #- name: Decode the pfx
    #  run: |
    #    $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
    #    $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
    #    [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

